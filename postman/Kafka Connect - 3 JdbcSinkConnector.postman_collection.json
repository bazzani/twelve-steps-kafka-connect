{
	"info": {
		"_postman_id": "6f0c1903-20bc-4588-8ba2-8cd8e1657d1b",
		"name": "Kafka Connect - 3 JdbcSinkConnector",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43004262",
		"_collection_link": "https://www.postman.com/telecoms-candidate-31669937/workspace/kafka-connect-twelve-steps/collection/43004262-6f0c1903-20bc-4588-8ba2-8cd8e1657d1b?action=share&source=collection_link&creator=43004262"
	},
	"item": [
		{
			"name": "JdbcSink pizza_orders",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/config",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"JdbcSinkConnector_pizza_orders\",\n    \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n    \"tasks.max\": \"1\",\n    \"errors.tolerance\": \"none\",\n    \"topics\": \"pizza_orders\",\n    \"connection.url\": \"jdbc:postgresql://postgres:5432/kafka_connect\",\n    \"connection.user\": \"kafka_connect_user\",\n    \"connection.password\": \"kafka_connect_password\",\n    \"insert.mode\": \"insert\",\n    \"batch.size\": \"10\",\n    \"table.name.format\": \"pizza_orders\",\n    \"pk.mode\": \"record_value\",\n    \"pk.fields\": \"store_id, store_order_id\",\n    \"fields.whitelist\": \"store_id, store_order_id, coupon_code, date, status, order_lines\",\n    \"auto.create\": \"false\",\n    \"auto.evolve\": \"false\",\n    \"max.retries\": \"0\",\n    \"retry.backoff.ms\": \"1000\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/config",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/config V2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"JdbcSinkConnector_pizza_orders\",\n    \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n    \"tasks.max\": \"1\",\n    \"errors.tolerance\": \"none\",\n    \"topics\": \"pizza_orders\",\n    \"connection.url\": \"jdbc:postgresql://postgres:5432/kafka_connect\",\n    \"connection.user\": \"kafka_connect_user\",\n    \"connection.password\": \"kafka_connect_password\",\n    \"insert.mode\": \"insert\",\n    \"batch.size\": \"10\",\n    \"table.name.format\": \"pizza_orders\",\n    \"pk.mode\": \"record_value\",\n    \"pk.fields\": \"store_id, store_order_id\",\n    \"fields.whitelist\": \"store_id, store_order_id, coupon_code, date, status, order_lines\",\n    \"auto.create\": \"false\",\n    \"auto.evolve\": \"false\",\n    \"max.retries\": \"0\",\n    \"retry.backoff.ms\": \"1000\",\n    \"transforms\": \"ExcludeOrderLines,InsertPendingOrderLinesJSON\",\n    \"transforms.ExcludeOrderLines.type\": \"org.apache.kafka.connect.transforms.ReplaceField$Value\",\n    \"transforms.ExcludeOrderLines.exclude\": \"order_lines\",\n    \"transforms.InsertPendingOrderLinesJSON.type\": \"org.apache.kafka.connect.transforms.InsertField$Value\",\n    \"transforms.InsertPendingOrderLinesJSON.static.field\": \"order_lines\",\n    \"transforms.InsertPendingOrderLinesJSON.static.value\": \"{\\\"info\\\":\\\"order lines mapping pending\\\"}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/config",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/pause",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/pause",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"pause"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/resume",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/resume",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"resume"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/restart",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/restart/?includeTasks=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"restart",
						""
					],
					"query": [
						{
							"key": "includeTasks",
							"value": "true"
						},
						{
							"key": "onlyFailed",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders/stop",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders/stop",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders",
						"stop"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders_auto_create/config",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"JdbcSinkConnector_pizza_orders_auto_create\",\n    \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n    \"tasks.max\": \"1\",\n    \"topics\": \"pizza_orders_3_partitions\",\n    \"connection.url\": \"jdbc:postgresql://postgres:5432/kafka_connect\",\n    \"connection.user\": \"kafka_connect_user\",\n    \"connection.password\": \"kafka_connect_password\",\n    \"insert.mode\": \"upsert\",\n    \"table.name.format\": \"kafka_${topic}\",\n    \"pk.mode\": \"kafka\",\n    \"pk.fields\": \"__connect_topic,__connect_partition,__connect_offset\",\n    \"auto.create\": \"true\",\n    \"auto.evolve\": \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders_auto_create/config",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders_auto_create",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders_auto_create/config V2",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"JdbcSinkConnector_pizza_orders_auto_create\",\n    \"connector.class\": \"io.confluent.connect.jdbc.JdbcSinkConnector\",\n    \"tasks.max\": \"1\",\n    \"topics\": \"pizza_orders_3_partitions\",\n    \"connection.url\": \"jdbc:postgresql://postgres:5432/kafka_connect\",\n    \"connection.user\": \"kafka_connect_user\",\n    \"connection.password\": \"kafka_connect_password\",\n    \"insert.mode\": \"upsert\",\n    \"table.name.format\": \"kafka_${topic}\",\n    \"pk.mode\": \"kafka\",\n    \"pk.fields\": \"__connect_topic,__connect_partition,__connect_offset\",\n    \"fields.whitelist\": \"store_id, store_order_id, coupon_code, date, status\",\n    \"auto.create\": \"true\",\n    \"auto.evolve\": \"true\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders_auto_create/config",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders_auto_create",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders_auto_create/restart",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders_auto_create/restart/?includeTasks=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders_auto_create",
						"restart",
						""
					],
					"query": [
						{
							"key": "includeTasks",
							"value": "true"
						},
						{
							"key": "onlyFailed",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "JdbcSink pizza_orders_auto_create",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8083/connectors/JdbcSinkConnector_pizza_orders_auto_create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8083",
					"path": [
						"connectors",
						"JdbcSinkConnector_pizza_orders_auto_create"
					]
				}
			},
			"response": []
		}
	]
}